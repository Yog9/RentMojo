{"version":3,"sources":["actions/types.js","reducers/postsReducer.js","reducers/userReducer.js","reducers/postDetailsReducer.js","reducers/commentsReducer.js","reducers/postDeleteReducer.js","reducers/itemsLoadingReducer.js","reducers/index.js","store.js","actions/itemsLoadingActions.js","components/User/UserItem.js","components/searchBar.js","components/Loading/Loading.js","components/User/User.js","actions/userActions.js","components/Posts/PostItem.js","components/Posts/Posts.js","actions/postActions.js","components/comments/CommentItem.js","components/comments/Comments.js","actions/deletePostActions.js","components/Posts/PostDetails.js","actions/postDetailsActions.js","actions/commentActions.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_USERS","FETCH_POSTS","FETCH_POST_DETAILS","FETCH_COMMENTS","DELETE_POST_SUCCESS","DELETE_POST_ERROR","ITEMS_LOADING","initialState","posts","isPostsLoading","users","isUserLoading","postsDetails","comments","post","error","isLoading","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","applyMiddleware","itemsLoading","data","UserItem","user","scope","data-label","name","company","to","id","SearchBar","input","onChange","placeholder","style","width","background","border","padding","value","e","target","Loading","Fragment","className","connect","fetchUsers","dispatch","fetch","then","res","json","useState","inputName","setInputName","inputCompany","setInputCompany","userSet","setUserSet","useEffect","usersFiltered","setUsersFiltered","filteredName","filteredCompany","userItems","map","updateName","a","trimInput","trim","filter","toLowerCase","includes","updateCompanyName","PostItem","userId","title","fetchPosts","skip","inputTitle","setInputTitle","postSet","setPostSet","user_id","useParams","postsFiltered","setPostsFiltered","filteredTitle","postItems","updateTitle","CommentItem","comment","body","deletePost","postId","method","catch","history","useHistory","commentItems","onClick","console","log","push","fetchPostDetails","fetchComments","post_id","App","basename","path","exact","component","User","Posts","PostDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d38647d8.chunk.js","sourcesContent":["export const FETCH_USERS = 'FETCH_USERS';\nexport const FETCH_POSTS = 'FETCH_POSTS';\nexport const FETCH_POST_DETAILS = 'FETCH_POST_DETAILS';\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS';\nexport const DELETE_POST_PENDING = 'DELETE_POST_PENDING';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_ERROR = 'DELETE_POST_ERROR';\nexport const ITEMS_LOADING= 'ITEMS_LOADING'","import { FETCH_POSTS } from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  isPostsLoading:true,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return { ...state, posts: action.payload,isPostsLoading:false };\n    default:\n      return state;\n  }\n}\n","import { FETCH_USERS } from \"../actions/types\";\n\nconst initialState = {\n  users: [],\n  isUserLoading:true\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_USERS:\n      return { ...state, users: action.payload,isUserLoading:false };\n    default:\n      return state;\n  }\n}\n","import { FETCH_POST_DETAILS } from \"../actions/types\";\n\nconst initialState = {\n  postsDetails: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POST_DETAILS:\n      return { ...state, postsDetails: action.payload };\n    default:\n      return state;\n  }\n}\n","import { FETCH_COMMENTS } from \"../actions/types\";\n\nconst initialState = {\n  comments: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return { ...state, comments: action.payload };\n    default:\n      return state;\n  }\n}\n","import { DELETE_POST_ERROR, DELETE_POST_SUCCESS } from \"../actions/types\";\n\nconst initialState = {\n  post: {},\n  error: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case DELETE_POST_SUCCESS:\n      return { ...state, post: action.payload };\n    case DELETE_POST_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { ITEMS_LOADING } from \"../actions/types\";\nconst initialState = {\n    isLoading: true\n};\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ITEMS_LOADING:\n            return {\n              ...state,\n              isLoading: action.payload,\n            };\n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\nimport postsReducer from \"./postsReducer\";\nimport userReducer from \"./userReducer\";\nimport postsDetails from \"./postDetailsReducer\";\nimport commentsReducer from \"./commentsReducer\"\nimport postDeleteReducer from \"./postDeleteReducer\";\nimport itemsloadingReducer from \"./itemsLoadingReducer\";\n\nexport default combineReducers({\n isLoading: itemsloadingReducer,\n  users: userReducer,\n  posts: postsReducer,\n  postsDetails:postsDetails,\n  comments:commentsReducer,\n  post:postDeleteReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleware)\n);\n\nexport default store;\n","import { ITEMS_LOADING } from \"./types\";\n\nexport const itemsLoading = (data) => {\n    return {\n        type: ITEMS_LOADING,\n        payload: data,\n    };\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./user.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst UserItem = ({ user }) => {\n  return (\n    <tr>\n      <td scope=\"row\" data-label=\"Name\">\n        {user.name}\n      </td>\n      <td data-label=\"Company\">{user.company.name}</td>\n      <td data-label=\"Blog Posts\">\n        <Link to={`/${user.id}/posts/`}>Posts</Link>\n      </td>\n    </tr>\n  );\n};\n\nUserItem.propTypes = {\n    user:PropTypes.object,\n};\n\nexport default UserItem;\n\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst SearchBar = ({input,onChange,placeholder}) => {\n  const BarStyling = {width:\"20rem\",background:\"#F2F1F9\", border:\"none\", padding:\"0.5rem\"};\n  return (\n    <input \n     style={BarStyling}\n     key=\"random1\"\n     value={input}\n     placeholder={placeholder}\n     onChange={(e) => onChange(e.target.value)}\n    />\n  );\n}\n\nSearchBar.propTypes = {\n  input:PropTypes.string,\n  onChange:PropTypes.func,\n  placeholder:PropTypes.string,\n};\n\nexport default SearchBar","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <React.Fragment>\n      <div className=\"loading\">\n        <div className=\"loading-content\">\n          <p>Loading...</p>\n        </div>\n      </div>\n      )\n    </React.Fragment>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./user.scss\";\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../../actions/userActions\";\nimport { itemsLoading } from \"../../actions/itemsLoadingActions\";\nimport UserItem from \"./UserItem\";\nimport SearchBar from \"../searchBar\";\nimport Loading from \"../Loading/Loading\"\n\nconst User = ({ fetchUsers, users, itemsLoading, isLoading }) => {\n  const [inputName, setInputName] = useState(\"\");\n  const [inputCompany, setInputCompany] = useState(\"\");\n  const [userSet, setUserSet] = useState(false);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const [usersFiltered, setUsersFiltered] = useState(users);\n\n  if (!isLoading && !userSet) {\n    setUsersFiltered(users);\n    setUserSet(true);\n  }\n\n  let filteredName = users;\n  let filteredCompany = users;\n  const userItems = usersFiltered.map((user) => (\n    <UserItem key={user.id} user={user} />\n  ));\n  const updateName = async (input) => {\n    let trimInput = input.trim();\n    if (trimInput) {\n      filteredName = users.filter((user) => {\n        return user.name.toLowerCase().includes(trimInput.toLowerCase());\n      });\n    }\n    setInputName(input);\n    setUsersFiltered(filteredName);\n  };\n\n  const updateCompanyName = async (input) => {\n    let trimInput = input.trim();\n    if (trimInput) {\n      filteredCompany = users.filter((user) => {\n        return user.company.name\n          .toLowerCase()\n          .includes(trimInput.toLowerCase());\n      });\n    }\n    setInputCompany(input);\n    setUsersFiltered(filteredCompany);\n  };\n\n  return (\n    isLoading?<Loading/>:(\n    <React.Fragment>\n      <SearchBar\n        input={inputName}\n        onChange={updateName}\n        placeholder=\"Search Name\"\n      />\n      <SearchBar\n        input={inputCompany}\n        onChange={updateCompanyName}\n        placeholder=\"Search Company\"\n      />\n      <table>\n        <caption>Users</caption>\n        <thead>\n          <tr>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Company</th>\n            <th scope=\"col\">Blog Posts</th>\n          </tr>\n        </thead>\n        <tbody>{userItems}</tbody>\n      </table>\n    </React.Fragment>\n    )\n  );\n};\n\nUser.propTypes = {\n  itemsLoading:PropTypes.func,\n  fetchUsers:PropTypes.func,\n  users:PropTypes.array,\n  isLoading:PropTypes.bool\n};\n\nfunction mapStateToProps(state) {\n  return { users: state.users.users, isLoading: state.isLoading.isLoading };\n}\n\nexport default connect(mapStateToProps, { fetchUsers, itemsLoading })(User);\n","import { FETCH_USERS } from \"./types\";\nimport { itemsLoading } from \"./itemsLoadingActions\";\nexport const fetchUsers = () => (dispatch) => {\n    dispatch(itemsLoading(true));\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((res) => res.json())\n    .then((users) => {\n      dispatch({\n        type: FETCH_USERS,\n        payload: users,\n      });\n        dispatch(itemsLoading(false));\n    });\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst PostItem = ({ post }) => {\n  return (\n    <React.Fragment>\n      <Link to={`/${post.userId}/posts/${post.id}`}>\n        <li key={post.id}>{post.title}</li>\n      </Link>\n    </React.Fragment>\n  );\n};\nPostItem.propTypes = {\n  post: PropTypes.object,\n};\nexport default PostItem;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts } from \"../../actions/postActions\";\nimport \"./post.scss\";\nimport PostItem from \"./PostItem\";\nimport SearchBar from \"../searchBar\";\nimport { itemsLoading } from \"../../actions/itemsLoadingActions\";\nimport Loading from \"../Loading/Loading\";\n\n\nconst Posts = ({ fetchPosts, posts, isLoading, itemsLoading,isPostsLoading }) => {\n  const [inputTitle, setInputTitle] = useState(\"\");\n  const [postSet, setPostSet] = useState(false);\n\n  const { user_id } = useParams();\n  useEffect(() => {\n    fetchPosts(user_id);\n  }, []);\n\n  const [postsFiltered, setPostsFiltered] = useState(posts);\n\n  if (!isPostsLoading && !postSet) {\n    setPostsFiltered(posts);\n    setPostSet(true);\n  }\n  let filteredTitle = posts;\n\n  const postItems = postsFiltered.map((post) => (\n    <PostItem key={post.id} post={post} />\n  ));\n\n  const updateTitle = async(input) => {\n    let trimInput = input.trim();\n    if (trimInput) {\n      filteredTitle = posts.filter((post) => {\n        return post.title.toLowerCase().includes(trimInput.toLowerCase());\n      });\n    }\n    setInputTitle(input);\n    setPostsFiltered(filteredTitle);\n  };\n \n  return (\n    isPostsLoading?<Loading/>:(\n    <React.Fragment>\n      {\" \"}\n      <SearchBar\n        input={inputTitle}\n        onChange={updateTitle}\n        placeholder=\"Search Title\"\n      />\n      <ul>{postItems}</ul>\n    </React.Fragment>\n    )\n  );\n};\n\nPosts.propTypes = {\n    posts: PropTypes.array,\n    fetchPosts:PropTypes.func,\n    isLoading:PropTypes.bool\n};\n\nconst mapStateToProps = (state) => {\n    return{\n    posts: state.posts.posts,\n    isLoading:state.isLoading.isLoading,\n    isPostsLoading:state.posts.isPostsLoading\n  }\n};\n\nexport default connect(mapStateToProps, { fetchPosts,itemsLoading })(Posts);\n","import { FETCH_POSTS } from \"./types\";\nimport { itemsLoading } from \"./itemsLoadingActions\";\n\nexport const fetchPosts = (userId,skip=0) => (dispatch) => {\n    dispatch(itemsLoading(true));\n  fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}&skip=${skip}&limit=10`)\n    .then((res) => res.json())\n    .then((posts) => {\n      dispatch({\n        type: FETCH_POSTS,\n        payload: posts,\n      });\n      dispatch(itemsLoading(false));\n    });\n};","import React from \"react\";\nimport \"../Posts/post.scss\"\nimport PropTypes from \"prop-types\";\n\nconst CommentItem = ({ comment }) => {\n  return (\n    <div>\n      <div className=\"card\">\n        <h3>{comment.name}</h3>\n        <p>{comment.body}</p>\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  comment:PropTypes.object\n};\n\nexport default CommentItem;\n","import React from \"react\";\nimport \"../Posts/post.scss\";\nimport CommentItem from \"./CommentItem\";\nimport { connect } from \"react-redux\";\nimport { deletePost } from \"../../actions/deletePostActions\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Comments = ({ comments,deletePost }) => {\n    let history = useHistory();\n  const commentItems = comments.map((comment) => (\n    <CommentItem key={comment.id} comment={comment} />\n  ));\n\n  const { user_id } = useParams();\n\n  const onSubmit = () => {\n    deletePost(user_id);\n    console.log(\"post deleted\")\n    history.push(`/${user_id}/posts`)\n  };\n\n  return (\n    <React.Fragment>\n      {commentItems}\n      <button onClick={onSubmit}>Delete this post</button>\n    </React.Fragment>\n  );\n};\n\nComments.propTypes = {\n  deletePost:PropTypes.func,\n  comments:PropTypes.array\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    post: state.post.post,\n    error:state.post,\n  };\n};\n\nexport default connect(mapStateToProps, { deletePost })(Comments);\n","import {\n  DELETE_POST_SUCCESS,\n  DELETE_POST_ERROR,\n//   DELETE_POST_PENDING,\n} from \"./types\";\nimport { itemsLoading } from \"./itemsLoadingActions\";\nexport const deletePost = (postId) => (dispatch) => {\n    dispatch(itemsLoading(true));\n  fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`, {\n    method: \"delete\",\n  })\n    .then((res) =>res.json() )\n    .then((post) => {\n      if (post.error) {\n        throw post.error;\n      }\n      dispatch({\n        type: DELETE_POST_SUCCESS,\n        payload: post,\n      });\n      dispatch(itemsLoading(false));\n    })\n    .catch((error) => {\n      dispatch({\n        type: DELETE_POST_ERROR,\n        payload: error,\n      });\n    });\n};\n","import { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchPostDetails } from \"../../actions/postDetailsActions\";\nimport { fetchComments } from \"../../actions/commentActions\";\nimport \"./post.scss\";\nimport Comments from \"../comments/Comments\";\nimport \"../comments/comment.scss\";\nimport { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst PostDetails = ({\n  fetchPostDetails,\n  postsDetails,\n  fetchComments,\n  comments,\n}) => {\n  const { post_id } = useParams();\n  useEffect(() => {\n    fetchPostDetails(post_id);\n  }, []);\n  \n  return (\n    <div>\n       Post Details - {post_id}\n      <div className=\"card\">\n        <h3>{postsDetails && postsDetails.title}</h3>\n        <p>{postsDetails && postsDetails.body}</p>\n        <p>\n          <button onClick={() => fetchComments(post_id)}>Show Comments</button>\n        </p>\n      </div>\n      <Comments comments={comments}/>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n    postsDetails:PropTypes.object,\n    fetchPostDetails:PropTypes.func,\n    fetchComments:PropTypes.func,\n    comments:PropTypes.array,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    postsDetails: state.postsDetails.postsDetails,\n    comments: state.comments.comments,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchPostDetails,\n  fetchComments,\n})(PostDetails);\n","\nimport { FETCH_POST_DETAILS } from \"./types\";\nimport { itemsLoading } from \"./itemsLoadingActions\";\nexport const fetchPostDetails = (postId) => (dispatch) => {\n  dispatch(itemsLoading(true));\n  fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`)\n    .then((res) => res.json())\n    .then((postsDetails) => {\n      dispatch({\n        type: FETCH_POST_DETAILS,\n        payload: postsDetails,\n      });\n      dispatch(itemsLoading(false));\n    });\n};","import { FETCH_COMMENTS } from \"./types\";\nimport { itemsLoading } from \"./itemsLoadingActions\";\n\nexport const fetchComments = (postId) => (dispatch) => {\n  dispatch(itemsLoading(true));\n  fetch(`https://jsonplaceholder.typicode.com/posts/${postId}/comments`)\n    .then((res) => res.json())\n    .then((comments) => {\n      dispatch({\n        type: FETCH_COMMENTS,\n        payload: comments,\n      });\n      dispatch(itemsLoading(false));\n    });\n};\n","import \"./App.scss\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport store from \"./store\";\nimport User from \"./components/User/User\";\nimport Posts from \"./components/Posts/Posts\";\nimport PostDetails from \"./components/Posts/PostDetails\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/rentmojo\">\n      <Switch>\n          <Route path=\"/\" exact component ={User}/>\n          <Route path =\"/:user_id/posts\" exact component ={Posts}/>\n          <Route path =\"/:user_id/posts/:post_id\" exact component ={PostDetails}/>\n        </Switch>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}